const delay = (timeout) =>
  new Promise((resolve) => setTimeout(resolve, timeout));

await delay(1000);
await page.goto("https://www.facebook.com/", {
  waitUntil: "networkidle2",
});
let logErrors = [];
async function inbox(page, numInboxes) {
  try {
    const items = await page.$$('ul[class="x1hc1fzr"] > li');
    if(items == null ) {
      logErrors.push({
        error: "Error while finding person to inbox",
        detail: "Person not found. Please check your selector.",
      });
    }
    for (let i = items.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [items[i], items[j]] = [items[j], items[i]];
    }
    for (let i = 0; i < numInboxes; i++) {
      await items[i].click();
      await delay(5000);
      await page.keyboard.type("Hi!");
      await delay(5000);
      await page.keyboard.press("Enter");
      await delay(5000);
      const exit = await page.$('svg[class="xvijh9v xhhsvwb x1ty9z65 xgzva0m"]');
      if(exit == null) {
        logErrors.push({
          error: "Error while finding exit button",
          detail: "Exit button not found. Please check your selector.",
        });
      }
      await exit.click();
      // await page.keyboard.press("Enter");
    }
  } catch (error) {
    logErrors.push({
      error: "Error while processing inbox button",
      detail: error.message,
    });
  }
}
try {
  await inbox(page, 3);
  await delay(5000);
} catch (error) {
  logErrors.push({
    error: "Error during inbox execution",
    detail: error.message,
  });
}
return logErrors;
